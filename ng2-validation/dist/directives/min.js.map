{"version":3,"file":"min.js","sourceRoot":"","sources":["../../src/directives/min.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,qBAA+E,eAAe,CAAC,CAAA;AAC/F,sBAAuE,gBAAgB,CAAC,CAAA;AAExF,sBAAiC,UAAU,CAAC,CAAA;AAE5C,IAAM,aAAa,GAAQ;IACzB,OAAO,EAAE,qBAAa;IACtB,WAAW,EAAE,iBAAU,CAAC,cAAM,OAAA,YAAY,EAAZ,CAAY,CAAC;IAC3C,KAAK,EAAE,IAAI;CACZ,CAAC;AAMF;IAAA;IAoBA,CAAC;IAfC,+BAAQ,GAAR;QACE,IAAI,CAAC,SAAS,GAAG,wBAAgB,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;IAClD,CAAC;IAED,kCAAW,GAAX,UAAY,OAAsB;QAChC,GAAG,CAAC,CAAC,IAAI,GAAG,IAAI,OAAO,CAAC,CAAC,CAAC;YACxB,EAAE,CAAC,CAAC,GAAG,KAAK,KAAK,CAAC,CAAC,CAAC;gBAClB,IAAI,CAAC,SAAS,GAAG,wBAAgB,CAAC,GAAG,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,YAAY,CAAC,CAAC;YACnE,CAAC;QACH,CAAC;IACH,CAAC;IAED,+BAAQ,GAAR,UAAS,CAAkB;QACzB,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;IAC3B,CAAC;IAlBD;QAAC,YAAK,EAAE;;6CAAA;IALV;QAAC,gBAAS,CAAC;YACT,QAAQ,EAAE,0DAA0D;YACpE,SAAS,EAAE,CAAC,aAAa,CAAC;SAC3B,CAAC;;oBAAA;IAqBF,mBAAC;AAAD,CAAC,AApBD,IAoBC;AApBY,oBAAY,eAoBxB,CAAA","sourcesContent":["import { Directive, Input, forwardRef, OnInit, OnChanges, SimpleChanges } from '@angular/core';\nimport { NG_VALIDATORS, Validator, ValidatorFn, AbstractControl } from '@angular/forms';\n\nimport { CustomValidators } from '../index';\n\nconst MIN_VALIDATOR: any = {\n  provide: NG_VALIDATORS,\n  useExisting: forwardRef(() => MinValidator),\n  multi: true\n};\n\n@Directive({\n  selector: '[min][formControlName],[min][formControl],[min][ngModel]',\n  providers: [MIN_VALIDATOR]\n})\nexport class MinValidator implements Validator, OnInit, OnChanges {\n  @Input() min: number;\n\n  private validator: ValidatorFn;\n\n  ngOnInit() {\n    this.validator = CustomValidators.min(this.min);\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    for (let key in changes) {\n      if (key === 'min') {\n        this.validator = CustomValidators.min(changes[key].currentValue);\n      }\n    }\n  }\n\n  validate(c: AbstractControl): {[key: string]: any} {\n    return this.validator(c);\n  }\n}\n"]}