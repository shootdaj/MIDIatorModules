{"version":3,"file":"range.js","sourceRoot":"","sources":["../../src/directives/range.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,qBAA+E,eAAe,CAAC,CAAA;AAC/F,sBAAuE,gBAAgB,CAAC,CAAA;AAExF,sBAAiC,UAAU,CAAC,CAAA;AAE5C,IAAM,eAAe,GAAQ;IAC3B,OAAO,EAAE,qBAAa;IACtB,WAAW,EAAE,iBAAU,CAAC,cAAM,OAAA,cAAc,EAAd,CAAc,CAAC;IAC7C,KAAK,EAAE,IAAI;CACZ,CAAC;AAMF;IAAA;IAoBA,CAAC;IAfC,iCAAQ,GAAR;QACE,IAAI,CAAC,SAAS,GAAG,wBAAgB,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IACtD,CAAC;IAED,oCAAW,GAAX,UAAY,OAAsB;QAChC,GAAG,CAAC,CAAC,IAAI,GAAG,IAAI,OAAO,CAAC,CAAC,CAAC;YACxB,EAAE,CAAC,CAAC,GAAG,KAAK,OAAO,CAAC,CAAC,CAAC;gBACpB,IAAI,CAAC,SAAS,GAAG,wBAAgB,CAAC,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,YAAY,CAAC,CAAC;YACrE,CAAC;QACH,CAAC;IACH,CAAC;IAED,iCAAQ,GAAR,UAAS,CAAkB;QACzB,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;IAC3B,CAAC;IAlBD;QAAC,YAAK,EAAE;;iDAAA;IALV;QAAC,gBAAS,CAAC;YACT,QAAQ,EAAE,gEAAgE;YAC1E,SAAS,EAAE,CAAC,eAAe,CAAC;SAC7B,CAAC;;sBAAA;IAqBF,qBAAC;AAAD,CAAC,AApBD,IAoBC;AApBY,sBAAc,iBAoB1B,CAAA","sourcesContent":["import { Directive, Input, forwardRef, OnInit, OnChanges, SimpleChanges } from '@angular/core';\nimport { NG_VALIDATORS, Validator, ValidatorFn, AbstractControl } from '@angular/forms';\n\nimport { CustomValidators } from '../index';\n\nconst RANGE_VALIDATOR: any = {\n  provide: NG_VALIDATORS,\n  useExisting: forwardRef(() => RangeValidator),\n  multi: true\n};\n\n@Directive({\n  selector: '[range][formControlName],[range][formControl],[range][ngModel]',\n  providers: [RANGE_VALIDATOR]\n})\nexport class RangeValidator implements Validator, OnInit, OnChanges {\n  @Input() range: [number];\n\n  private validator: ValidatorFn;\n\n  ngOnInit() {\n    this.validator = CustomValidators.range(this.range);\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    for (let key in changes) {\n      if (key === 'range') {\n        this.validator = CustomValidators.range(changes[key].currentValue);\n      }\n    }\n  }\n\n  validate(c: AbstractControl): {[key: string]: any} {\n    return this.validator(c);\n  }\n}\n"]}